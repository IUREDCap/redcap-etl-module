┌─ @BeforeFeature # IU\RedCapEtlModule\WebTests\FeatureContext::setupFeature()
│
│  Initializing admin config
│  Initializing etl servers
│  
│
Feature: Admin Config
  In order to control user run options
  As an admin
  I need to be able to turn on and off running on demand and running as a cron job

  Background:         # features/admin-config.feature:11
    Given I am on "/" # IU\RedCapEtlModule\WebTests\FeatureContext::visit()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'admin-config'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Admin save of config changes for "allow on demand", "allow cron", and                               # features/admin-config.feature:14
      and an allowed cron time.
    When I access the admin interface                                                                           # IU\RedCapEtlModule\WebTests\FeatureContext::iAccessTheAdminInterface()
    And I follow "Config"                                                                                       # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I uncheck "allowOnDemand"                                                                               # IU\RedCapEtlModule\WebTests\FeatureContext::uncheckOption()
    And I uncheck "allowCron"                                                                                   # IU\RedCapEtlModule\WebTests\FeatureContext::uncheckOption()
    And I uncheck "allowedCronTimes[6][23]"                                                                     # IU\RedCapEtlModule\WebTests\FeatureContext::uncheckOption()
    And I press "Save"                                                                                          # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    Then I should see "Last ETL cron run time"                                                                  # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see table headers "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" # IU\RedCapEtlModule\WebTests\FeatureContext::iShouldSeeTableHeaders()
    And the checkbox "allowedCronTimes[6][23]" should be unchecked                                              # IU\RedCapEtlModule\WebTests\FeatureContext::assertCheckboxNotChecked()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'admin-config'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: User logged in with "allow on demand" and "allow cron" disabled                 # features/admin-config.feature:26
    When I access the admin interface                                                       # IU\RedCapEtlModule\WebTests\FeatureContext::iAccessTheAdminInterface()
    And I follow "Config"                                                                   # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I uncheck "allowOnDemand"                                                           # IU\RedCapEtlModule\WebTests\FeatureContext::uncheckOption()
    And I uncheck "allowCron"                                                               # IU\RedCapEtlModule\WebTests\FeatureContext::uncheckOption()
    And I press "Save"                                                                      # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I log out                                                                           # IU\RedCapEtlModule\WebTests\FeatureContext::iLogOut()
    And I log in as user                                                                    # IU\RedCapEtlModule\WebTests\FeatureContext::iLogInAsUser()
    And I follow "My Projects"                                                              # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I select the test project                                                           # IU\RedCapEtlModule\WebTests\FeatureContext::iSelectTheTestProject()
    And I follow "REDCap-ETL"                                                               # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I should see tabs "ETL Configurations", "ETL Workflows", "Configure", "User Manual" # IU\RedCapEtlModule\WebTests\FeatureContext::iShouldSeeTabs()
    But I should not see tabs "Run", "Schedule"                                             # IU\RedCapEtlModule\WebTests\FeatureContext::iShouldNotSeeTabs()
    And tab "ETL Configurations" should be selected                                         # IU\RedCapEtlModule\WebTests\FeatureContext::tabShouldBeSelected()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'admin-config'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Check "allow on demand" and "allow cron"             # features/admin-config.feature:48
    When I access the admin interface                            # IU\RedCapEtlModule\WebTests\FeatureContext::iAccessTheAdminInterface()
    When I follow "Config"                                       # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I check "allowOnDemand"                                  # IU\RedCapEtlModule\WebTests\FeatureContext::checkOption()
    And I check "allowCron"                                      # IU\RedCapEtlModule\WebTests\FeatureContext::checkOption()
    And I check "allowedCronTimes[6][23]"                        # IU\RedCapEtlModule\WebTests\FeatureContext::checkOption()
    And I press "Save"                                           # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    Then I should see "Last ETL cron run time"                   # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And the checkbox "allowedCronTimes[6][23]" should be checked # IU\RedCapEtlModule\WebTests\FeatureContext::assertCheckboxChecked()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'admin-config'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: User logged in with "allow on demand" and "allow cron" enabled                                      # features/admin-config.feature:58
    When I log in as user and access REDCap-ETL for test project                                                # IU\RedCapEtlModule\WebTests\FeatureContext::iLogInAsUserAndAccessRedCapEtlForTestProject()
    Then I should see tabs "ETL Configurations", "ETL Workflows", "Configure", "User Manual", "Run", "Schedule" # IU\RedCapEtlModule\WebTests\FeatureContext::iShouldSeeTabs()

4 scenarios (4 passed)
36 steps (36 passed)
0m18.46s (12.85Mb)
┌─ @BeforeFeature # IU\RedCapEtlModule\WebTests\FeatureContext::setupFeature()
│
│  Initializing admin config
│  Initializing etl servers
│  
│
Feature: Admin Help Customization
  In order to provide site-specific help
  As an admin
  I need to be able to create custom help text

  Background:         # features/admin-help.feature:11
    Given I am on "/" # IU\RedCapEtlModule\WebTests\FeatureContext::visit()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'admin-help'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Use help topic selection to access a help topic        # features/admin-help.feature:14
    When I log in as admin and access REDCap-ETL                   # IU\RedCapEtlModule\WebTests\FeatureContext::iLogInAsAdminAndAccessRedCapEtl()
    And I follow "Help Edit"                                       # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow "Edit"                                            # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I select "E-mail To List" from "Help Topic"                # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I wait for 4 seconds                                       # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    Then I should see "A comma-separated list of e-mail addresses" # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'admin-help'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Try to save help with no help topic selected # features/admin-help.feature:22
    When I log in as admin and access REDCap-ETL         # IU\RedCapEtlModule\WebTests\FeatureContext::iLogInAsAdminAndAccessRedCapEtl()
    And I follow "Help Edit"                             # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow "Edit"                                  # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I press "Save"                                   # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    Then I should see "Error:"                           # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "No help topic specified"           # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'admin-help'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Preview custom help prepended to default help            # features/admin-help.feature:30
    When I log in as admin and access REDCap-ETL                     # IU\RedCapEtlModule\WebTests\FeatureContext::iLogInAsAdminAndAccessRedCapEtl()
    And I follow "Help Edit"                                         # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow "API Token User"                                    # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I fill in "customHelp" with "custom help"                    # IU\RedCapEtlModule\WebTests\FeatureContext::fillField()
    And I select "Prepend custom text to default" from "helpSetting" # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I press "Preview"                                            # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I wait for 4 seconds                                         # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    Then I should see "custom help REDCap-ETL uses the REDCap API"   # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'admin-help'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Preview custom help appended to default help            # features/admin-help.feature:40
    When I log in as admin and access REDCap-ETL                    # IU\RedCapEtlModule\WebTests\FeatureContext::iLogInAsAdminAndAccessRedCapEtl()
    And I follow "Help Edit"                                        # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow "Database Logging"                                 # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I fill in "customHelp" with "custom help"                   # IU\RedCapEtlModule\WebTests\FeatureContext::fillField()
    And I select "Append custom text to default" from "helpSetting" # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I press "Preview"                                           # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I wait for 4 seconds                                        # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    Then I should see "the same ETL process. custom help"           # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'admin-help'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  @modified-help-for-batch-size
  Scenario: Replacing default help text with custom help text and saving should update the admin help edit page # features/admin-help.feature:51
    When I log in as admin and access REDCap-ETL                                                                # IU\RedCapEtlModule\WebTests\FeatureContext::iLogInAsAdminAndAccessRedCapEtl()
    And I follow "Help Edit"                                                                                    # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow "Batch Size"                                                                                   # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I fill in "customHelp" with "<p>Batch sizes over 100 are not recommended.</p>"                          # IU\RedCapEtlModule\WebTests\FeatureContext::fillField()
    And I select "Use custom text" from "helpSetting"                                                           # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I press "Save"                                                                                          # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    Then the "#customHelp" element should contain "Batch sizes over 100 are not recommended."                   # IU\RedCapEtlModule\WebTests\FeatureContext::assertElementContains()
    Then the "#helpSetting option:selected" element should contain "Use custom text"                            # IU\RedCapEtlModule\WebTests\FeatureContext::assertElementContains()
    But the "#helpSetting option:selected" element should not contain "Use default text"                        # IU\RedCapEtlModule\WebTests\FeatureContext::assertElementNotContains()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'admin-help'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  @modified-help-for-batch-size
  Scenario: Replacing default help text with custom help should update user help                 # features/admin-help.feature:65
    When I log in as admin and access REDCap-ETL                                                 # IU\RedCapEtlModule\WebTests\FeatureContext::iLogInAsAdminAndAccessRedCapEtl()
    And I follow "Help Edit"                                                                     # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow "Batch Size"                                                                    # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I fill in "customHelp" with "<p>Batch sizes over 500 are not recommended.</p>"           # IU\RedCapEtlModule\WebTests\FeatureContext::fillField()
    And I select "Use custom text" from "helpSetting"                                            # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I press "Save"                                                                           # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I log out                                                                                # IU\RedCapEtlModule\WebTests\FeatureContext::iLogOut()
    And I log in as user and access REDCap-ETL for test project                                  # IU\RedCapEtlModule\WebTests\FeatureContext::iLogInAsUserAndAccessRedCapEtlForTestProject()
    And I fill in "behat-help-test" for "REDCap-ETL configuration name:"                         # IU\RedCapEtlModule\WebTests\FeatureContext::fillField()
    And I press "Add"                                                                            # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I follow configuration "behat-help-test"                                                 # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowConfiguration()
    And I follow "batch-size-help-link"                                                          # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    Then I should see "Batch sizes over 500 are not recommended."                                # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    But I should not see "The batch size indicates how many REDCap record IDs will be processed" # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'admin-help'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Remove custom help text                                                    # features/admin-help.feature:86
    When I access the admin interface                                                  # IU\RedCapEtlModule\WebTests\FeatureContext::iAccessTheAdminInterface()
    And I follow "Help Edit"                                                           # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow "Batch Size"                                                          # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I fill in "customHelp" with "<p>Batch sizes over 500 are not recommended.</p>" # IU\RedCapEtlModule\WebTests\FeatureContext::fillField()
    And I select "Use custom text" from "helpSetting"                                  # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I press "Save"                                                                 # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I fill in "customHelp" with ""                                                 # IU\RedCapEtlModule\WebTests\FeatureContext::fillField()
    And I select "Use default text" from "helpSetting"                                 # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I press "Save"                                                                 # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    Then I should not see "Batch sizes over 500 are not recommended."                  # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

7 scenarios (7 passed)
68 steps (68 passed)
0m47.54s (13.00Mb)
┌─ @BeforeFeature # IU\RedCapEtlModule\WebTests\FeatureContext::setupFeature()
│
│  Initializing admin config
│  Initializing etl servers
│  
│
Feature: Admin Log
  In order to monitor user activity
  As an admin
  I need to be able to use the REDCap-ETL Admin Log page

  Background:                         # features/admin-log.feature:11
    Given I am on "/"                 # IU\RedCapEtlModule\WebTests\FeatureContext::visit()
    When I access the admin interface # IU\RedCapEtlModule\WebTests\FeatureContext::iAccessTheAdminInterface()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'admin-log'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Use the admin log page to see cron jobs                           # features/admin-log.feature:15
    When I follow "Log"                                                       # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I select "Cron Jobs" from "Log Entries:"                              # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I press "Display"                                                     # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    Then I should see "Cron Jobs"                                             # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    Then I should see table headers "Log ID", "Time", "Day", "Hour", "# Jobs" # IU\RedCapEtlModule\WebTests\FeatureContext::iShouldSeeTableHeaders()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'admin-log'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Use the admin log page to see ETL processes                                                                                                    # features/admin-log.feature:22
    When I follow "Log"                                                                                                                                    # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I select "ETL Processes" from "Log Entries:"                                                                                                       # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I press "Display"                                                                                                                                  # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    Then I should see "ETL Processes"                                                                                                                      # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    Then I should see table headers "Log ID", "Time", "Project ID", "Server", "Config", "User ID", "Username", "Cron?", "Cron Day", "Cron Hour", "Details" # IU\RedCapEtlModule\WebTests\FeatureContext::iShouldSeeTableHeaders()

2 scenarios (2 passed)
14 steps (14 passed)
0m11.27s (12.84Mb)
┌─ @BeforeFeature # IU\RedCapEtlModule\WebTests\FeatureContext::setupFeature()
│
│  Initializing admin config
│  Initializing etl servers
│  
│
Feature: Admin-Interface
  In order to execute admin actions
  As an admin
  I need to be able to access the REDCap-ETL Admin Pages

  Background:                         # features/admin-pages.feature:11
    Given I am on "/"                 # IU\RedCapEtlModule\WebTests\FeatureContext::visit()
    When I access the admin interface # IU\RedCapEtlModule\WebTests\FeatureContext::iAccessTheAdminInterface()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'admin-pages'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Access the admin home page # features/admin-pages.feature:15
    Then I should see "Info"           # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Config"          # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Cron Detail"     # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Users"           # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "ETL Servers"     # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Help Edit"       # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'admin-pages'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Access the admin config page       # features/admin-pages.feature:23
    When I follow "Config"                     # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    Then I should see "Last ETL cron run time" # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Sunday"                  # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Monday"                  # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Tuesday"                 # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Wednesday"               # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Thursday"                # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Friday"                  # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Saturday"                # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'admin-pages'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Access the admin cron detail page # features/admin-pages.feature:34
    When I follow "Cron Detail"               # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    Then I should see "Day"                   # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Time"                   # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'admin-pages'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Access the admin users page # features/admin-pages.feature:39
    When I follow "Users"               # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    Then I should see "List"            # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Search"           # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'admin-pages'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Access the admin user search page # features/admin-pages.feature:44
    When I follow "Users"                     # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow "Search"                     # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    Then I should see "User:"                 # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'admin-pages'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Access the admin ETL servers page # features/admin-pages.feature:49
    When I follow "ETL Servers"               # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    Then I should see "List"                  # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Configuration"          # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'admin-pages'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Access the admin ETL server config page # features/admin-pages.feature:54
    When I follow "ETL Servers"                     # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow "Configuration"                    # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    Then I should see "Server:"                     # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'admin-pages'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Access the admin help edit list page # features/admin-pages.feature:59
    When I follow "Help Edit"                    # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    Then I should see "List"                     # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Edit"                      # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Topic"                     # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Setting"                   # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'admin-pages'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Access the admin help edit edit page # features/admin-pages.feature:66
    When I follow "Help Edit"                    # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow "Edit"                          # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    Then I should see "Help Topic"               # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Help Text"                 # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Preview"                   # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Default Help Text"         # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'admin-pages'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Access the admin info page        # features/admin-pages.feature:74
    When I follow "Info"                      # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    Then I should see "Overview"              # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "REDCap-ETL Servers"     # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Extract Transform Load" # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'admin-pages'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Access the admin log page  # features/admin-pages.feature:80
    When I follow "Log"                # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    Then I should see "REDCap-ETL Log" # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Log Entries:"    # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

11 scenarios (11 passed)
70 steps (70 passed)
0m34.38s (12.57Mb)
┌─ @BeforeFeature # IU\RedCapEtlModule\WebTests\FeatureContext::setupFeature()
│
│  Initializing admin config
│  Initializing etl servers
│  
│
Feature: Admin-Interface
  In order to help users
  As an admin
  I need to be able to access their projects' ETL information

  Background:                         # features/admin-project-access.feature:11
    Given I am on "/"                 # IU\RedCapEtlModule\WebTests\FeatureContext::visit()
    When I access the admin interface # IU\RedCapEtlModule\WebTests\FeatureContext::iAccessTheAdminInterface()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'admin-project-access'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Access the REDCap-ETL page of a user's project # features/admin-project-access.feature:15
    When I follow "Users"                                  # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow "Search"                                  # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I search for user                                  # IU\RedCapEtlModule\WebTests\FeatureContext::iSearchForUser()
    And I select the test project in new window            # IU\RedCapEtlModule\WebTests\FeatureContext::iSelectTheTestProjectInNewWindow()
    And I follow "REDCap-ETL"                              # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    Then I should see "ETL Configurations"                 # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

1 scenario (1 passed)
8 steps (8 passed)
0m17.80s (12.56Mb)
┌─ @BeforeFeature # IU\RedCapEtlModule\WebTests\FeatureContext::setupFeature()
│
│  Initializing admin config
│  Initializing etl servers
│  
│
Feature: Admin User Management
  In order to manage users
  As an admin
  I need to be able to add users to, and delete users from, the list of approved ETL users;
  and I need to be able to set ETL access for their projects

  Background:         # features/admin-user-management.feature:12
    Given I am on "/" # IU\RedCapEtlModule\WebTests\FeatureContext::visit()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'admin-user-management'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Delete the test user from REDCap-ETL # features/admin-user-management.feature:15
    When I access the admin interface            # IU\RedCapEtlModule\WebTests\FeatureContext::iAccessTheAdminInterface()
    When I follow "Users"                        # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow "Search"                        # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I search for user                        # IU\RedCapEtlModule\WebTests\FeatureContext::iSearchForUser()
    And I press "Delete User from REDCap-ETL"    # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I wait for 2 seconds                     # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    And I press "Delete user"                    # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I wait for 2 seconds                     # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    Then I should see "deleted"                  # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'admin-user-management'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Try to access REDCap-ETL for test project as the test user # features/admin-user-management.feature:26
    When I log in as user                                              # IU\RedCapEtlModule\WebTests\FeatureContext::iLogInAsUser()
    And I follow "My Projects"                                         # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I select the test project                                      # IU\RedCapEtlModule\WebTests\FeatureContext::iSelectTheTestProject()
    And I follow "REDCap-ETL"                                          # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    Then I should see "To request access, click on the button below"   # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'admin-user-management'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Try to request ETL access for test project as the test user # features/admin-user-management.feature:33
    When I log in as user                                               # IU\RedCapEtlModule\WebTests\FeatureContext::iLogInAsUser()
    And I follow "My Projects"                                          # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I select the test project                                       # IU\RedCapEtlModule\WebTests\FeatureContext::iSelectTheTestProject()
    And I follow "REDCap-ETL"                                           # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I press "Request ETL access for this project"                   # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I wait for 4 seconds                                            # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    Then I should see "Request"                                         # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "sent"                                             # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    But I should not see "Error:"                                       # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'admin-user-management'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Add back the test user to REDCap-ETL # features/admin-user-management.feature:44
    When I access the admin interface            # IU\RedCapEtlModule\WebTests\FeatureContext::iAccessTheAdminInterface()
    When I follow "Users"                        # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow "Search"                        # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I search for user                        # IU\RedCapEtlModule\WebTests\FeatureContext::iSearchForUser()
    And I check test and forms projects access   # IU\RedCapEtlModule\WebTests\FeatureContext::iCheckTestAndFormsProjectsAccess()
    And I press "Save"                           # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()

4 scenarios (4 passed)
33 steps (33 passed)
2m31.67s (12.56Mb)
┌─ @BeforeFeature # IU\RedCapEtlModule\WebTests\FeatureContext::setupFeature()
│
│  Initializing admin config
│  Initializing etl servers
│  
│
Feature: Admin-Interface
  In order to execute admin actions
  As an admin
  I need to be able to access the REDCap-ETL Admin Pages

  Background:                         # features/admin-user-search.feature:11
    Given I am on "/"                 # IU\RedCapEtlModule\WebTests\FeatureContext::visit()
    When I access the admin interface # IU\RedCapEtlModule\WebTests\FeatureContext::iAccessTheAdminInterface()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'admin-user-search'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Access the admin user search page # features/admin-user-search.feature:15
    When I follow "Users"                     # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow "Search"                     # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I search for user                     # IU\RedCapEtlModule\WebTests\FeatureContext::iSearchForUser()
    Then I should see "ETL Access?"           # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "PID"                    # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Project"                # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "ETL Configurations"     # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

1 scenario (1 passed)
9 steps (9 passed)
0m12.57s (12.56Mb)
┌─ @BeforeFeature # IU\RedCapEtlModule\WebTests\FeatureContext::setupFeature()
│
│  Initializing admin config
│  Initializing etl servers
│  
│
Feature: User-Interface
  In order to use REDCap-ETL
  As a non-admin user
  I need to be able to autogenerate the transformation rules

  Background:                      # features/autogen-config.feature:11
    Given I am on "/"              # IU\RedCapEtlModule\WebTests\FeatureContext::visit()
    And I am logged in as user     # IU\RedCapEtlModule\WebTests\FeatureContext::iAmLoggedInAsUser()
    When I follow "My Projects"    # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I select the forms project # IU\RedCapEtlModule\WebTests\FeatureContext::iSelectTheFormsProject()
    And I follow "REDCap-ETL"      # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'autogen-config'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Create configuration                                 # features/autogen-config.feature:18
    When I delete configuration "behat-config-test" if it exists # IU\RedCapEtlModule\WebTests\FeatureContext::iDeleteConfigurationIfExists()
    And I wait for 4 seconds                                     # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    And I fill in "configurationName" with "behat-config-test"   # IU\RedCapEtlModule\WebTests\FeatureContext::fillField()
    And I press "Add"                                            # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I wait for 4 seconds                                     # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    Then I should see "behat-config-test"                        # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    But I should not see "Error:"                                # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'autogen-config'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Configure configuration that has no auto-gen options specified # features/autogen-config.feature:28
    When I follow configuration "behat-config-test"                        # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowConfiguration()
    And I configure configuration "behat"                                  # IU\RedCapEtlModule\WebTests\FeatureContext::iConfigureConfiguration()
    And I press "Save"                                                     # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I log out                                                          # IU\RedCapEtlModule\WebTests\FeatureContext::iLogOut()
    And I wait for 1 seconds                                               # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    And I am on "/"                                                        # IU\RedCapEtlModule\WebTests\FeatureContext::visit()
    And I am logged in as user                                             # IU\RedCapEtlModule\WebTests\FeatureContext::iAmLoggedInAsUser()
    And I follow "My Projects"                                             # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I select the forms project                                         # IU\RedCapEtlModule\WebTests\FeatureContext::iSelectTheFormsProject()
    And I follow "REDCap-ETL"                                              # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow configuration "behat-config-test"                         # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowConfiguration()
    Then I should see "Transform Settings"                                 # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I "should" see this text "TABLE,registration,registration_id,ROOT" # IU\RedCapEtlModule\WebTests\FeatureContext::iSeeThisText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'autogen-config'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Configure configuration that has the include auto-gen options specified # features/autogen-config.feature:43
    When I follow "My Projects"                                                     # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I select the forms project                                                  # IU\RedCapEtlModule\WebTests\FeatureContext::iSelectTheFormsProject()
    And I follow "REDCap-ETL"                                                       # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow configuration "behat-config-test"                                  # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowConfiguration()
    And I specify the auto-gen "include" options for "behat"                        # IU\RedCapEtlModule\WebTests\FeatureContext::iSpecifyTheAutoGenOptionsFor()
    Then I "should" see this text "redcap_data_access_group"                        # IU\RedCapEtlModule\WebTests\FeatureContext::iSeeThisText()
    And I "should" see this text "registration_complete"                            # IU\RedCapEtlModule\WebTests\FeatureContext::iSeeThisText()
    And I "should" see this text "consent_form"                                     # IU\RedCapEtlModule\WebTests\FeatureContext::iSeeThisText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'autogen-config'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Configure configuration that has the remove auto-gen options specified # features/autogen-config.feature:53
    When I follow "My Projects"                                                    # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I select the forms project                                                 # IU\RedCapEtlModule\WebTests\FeatureContext::iSelectTheFormsProject()
    And I follow "REDCap-ETL"                                                      # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow configuration "behat-config-test"                                 # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowConfiguration()
    And I specify the auto-gen "remove" options for "behat"                        # IU\RedCapEtlModule\WebTests\FeatureContext::iSpecifyTheAutoGenOptionsFor()
    Then I "should not" see this text "first_name"                                 # IU\RedCapEtlModule\WebTests\FeatureContext::iSeeThisText()
    And I "should not" see this text "email"                                       # IU\RedCapEtlModule\WebTests\FeatureContext::iSeeThisText()
    And I "should not" see this text "address"                                     # IU\RedCapEtlModule\WebTests\FeatureContext::iSeeThisText()
    And I "should not" see this text "comments"                                    # IU\RedCapEtlModule\WebTests\FeatureContext::iSeeThisText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'autogen-config'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Configure configuration that has nonrepeating-table auto-gen options specified # features/autogen-config.feature:64
    When I follow "My Projects"                                                            # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I select the forms project                                                         # IU\RedCapEtlModule\WebTests\FeatureContext::iSelectTheFormsProject()
    And I follow "REDCap-ETL"                                                              # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow configuration "behat-config-test"                                         # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowConfiguration()
    And I specify the auto-gen "nonrepeating fields and table" options for "behat"         # IU\RedCapEtlModule\WebTests\FeatureContext::iSpecifyTheAutoGenOptionsFor()
    Then I "should" see this text "TABLE,merged,merged_id,ROOT"                            # IU\RedCapEtlModule\WebTests\FeatureContext::iSeeThisText()
    And I "should" see this text "TABLE,weight,merged,REPEATING_INSTRUMENTS"               # IU\RedCapEtlModule\WebTests\FeatureContext::iSeeThisText()
    But I "should not" see this text "TABLE,emergency,emergency_id,ROOT"                   # IU\RedCapEtlModule\WebTests\FeatureContext::iSeeThisText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'autogen-config'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Configure configuration that has combine nonrepeating fields checkbox-only specified (this is an error condition) # features/autogen-config.feature:74
    When I follow "My Projects"                                                                                               # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I select the forms project                                                                                            # IU\RedCapEtlModule\WebTests\FeatureContext::iSelectTheFormsProject()
    And I follow "REDCap-ETL"                                                                                                 # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow configuration "behat-config-test"                                                                            # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowConfiguration()
    And I specify the auto-gen "combined nonrepeating checkbox only" options for "behat"                                      # IU\RedCapEtlModule\WebTests\FeatureContext::iSpecifyTheAutoGenOptionsFor()
    Then I should see "ERROR: In AUTO-GENERATE TRANSFORMATION RULES"                                                          # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    But I "should not" see this text "TABLE,merged,merged_id,ROOT"                                                            # IU\RedCapEtlModule\WebTests\FeatureContext::iSeeThisText()
    And I "should not" see this text "TABLE,emergency,emergency_id,ROOT"                                                      # IU\RedCapEtlModule\WebTests\FeatureContext::iSeeThisText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'autogen-config'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Configure configuration that has nonrepeating-table name option only specified (this is not an error condition) # features/autogen-config.feature:84
    When I follow "My Projects"                                                                                             # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I select the forms project                                                                                          # IU\RedCapEtlModule\WebTests\FeatureContext::iSelectTheFormsProject()
    And I follow "REDCap-ETL"                                                                                               # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow configuration "behat-config-test"                                                                          # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowConfiguration()
    And I specify the auto-gen "nonrepeating table name only" options for "behat"                                           # IU\RedCapEtlModule\WebTests\FeatureContext::iSpecifyTheAutoGenOptionsFor()
    Then I "should" see this text "TABLE,registration,registration_id,ROOT"                                                 # IU\RedCapEtlModule\WebTests\FeatureContext::iSeeThisText()
    But I should not see "ERROR: In AUTO-GENERATE TRANSFORMATION RULES"                                                     # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()
    And I "should not" see this text "TABLE,merged,merged_id,ROOT"                                                          # IU\RedCapEtlModule\WebTests\FeatureContext::iSeeThisText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'autogen-config'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Configure configuration to automatically auto-generate rules before each ETL run and then run ETL # features/autogen-config.feature:94
    When I follow configuration "behat-config-test"                                                           # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowConfiguration()
    And I configure configuration "behat"                                                                     # IU\RedCapEtlModule\WebTests\FeatureContext::iConfigureConfiguration()
    And I check "autogen_before_run"                                                                          # IU\RedCapEtlModule\WebTests\FeatureContext::checkOption()
    And I check "autogen_combine_non_repeating_fields"                                                        # IU\RedCapEtlModule\WebTests\FeatureContext::checkOption()
    And I fill in "autogen_non_repeating_fields_table" with "testtable"                                       # IU\RedCapEtlModule\WebTests\FeatureContext::fillField()
    And I press "Save"                                                                                        # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I log out                                                                                             # IU\RedCapEtlModule\WebTests\FeatureContext::iLogOut()
    And I wait for 1 seconds                                                                                  # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    And I am on "/"                                                                                           # IU\RedCapEtlModule\WebTests\FeatureContext::visit()
    And I am logged in as user                                                                                # IU\RedCapEtlModule\WebTests\FeatureContext::iAmLoggedInAsUser()
    And I follow "My Projects"                                                                                # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I select the forms project                                                                            # IU\RedCapEtlModule\WebTests\FeatureContext::iSelectTheFormsProject()
    And I follow "REDCap-ETL"                                                                                 # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow configuration "behat-config-test"                                                            # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowConfiguration()
    Then I should see "Transform Settings"                                                                    # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I "should" see this text "TABLE,registration,registration_id,ROOT"                                    # IU\RedCapEtlModule\WebTests\FeatureContext::iSeeThisText()
    But I "should not" see this text "testtable"                                                              # IU\RedCapEtlModule\WebTests\FeatureContext::iSeeThisText()
    When I log out                                                                                            # IU\RedCapEtlModule\WebTests\FeatureContext::iLogOut()
    And I wait for 1 seconds                                                                                  # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    And I am on "/"                                                                                           # IU\RedCapEtlModule\WebTests\FeatureContext::visit()
    And I am logged in as user                                                                                # IU\RedCapEtlModule\WebTests\FeatureContext::iAmLoggedInAsUser()
    And I follow "My Projects"                                                                                # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I select the forms project                                                                            # IU\RedCapEtlModule\WebTests\FeatureContext::iSelectTheFormsProject()
    And I follow "REDCap-ETL"                                                                                 # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow "Run"                                                                                        # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I wait for 20 seconds                                                                                 # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    And I select "task" from "configType"                                                                     # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I select "behat-config-test" from "configName"                                                        # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I select "(embedded server)" from "server"                                                            # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I press "Run"                                                                                         # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I wait for 5 seconds                                                                                  # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    Then I should see "Processing complete"                                                                   # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Created table 'testtable'"                                                              # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Created table 'weight'"                                                                 # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    But I should not see "Created table 'registration'"                                                       # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

8 scenarios (8 passed)
136 steps (136 passed)
1m15.28s (12.61Mb)
┌─ @BeforeFeature # IU\RedCapEtlModule\WebTests\FeatureContext::setupFeature()
│
│  Initializing admin config
│  Initializing etl servers
│  
│
Feature: User-Interface
  In order to use REDCap-ETL
  As a non-admin user
  I need to be able to create, copy, rename and delete configurations
  and get help for a REDCap-ETL enabled project

  Background:                      # features/etl-config.feature:12
    Given I am on "/"              # IU\RedCapEtlModule\WebTests\FeatureContext::visit()
    And I am logged in as user     # IU\RedCapEtlModule\WebTests\FeatureContext::iAmLoggedInAsUser()
    When I follow "My Projects"    # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    When I select the test project # IU\RedCapEtlModule\WebTests\FeatureContext::iSelectTheTestProject()
    And I follow "REDCap-ETL"      # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'etl-config'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Delete configuration if it exists                    # features/etl-config.feature:19
    When I delete configuration "behat-config-test" if it exists # IU\RedCapEtlModule\WebTests\FeatureContext::iDeleteConfigurationIfExists()
    Then I should not see "behat-config-test"                    # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'etl-config'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Create configuration                                # features/etl-config.feature:23
    When I fill in "configurationName" with "behat-config-test" # IU\RedCapEtlModule\WebTests\FeatureContext::fillField()
    And I press "Add"                                           # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    Then I should see "behat-config-test"                       # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    But I should not see "Error:"                               # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'etl-config'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Configure configuration                 # features/etl-config.feature:29
    When I follow configuration "behat-config-test" # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowConfiguration()
    And I configure configuration "behat"           # IU\RedCapEtlModule\WebTests\FeatureContext::iConfigureConfiguration()
    And I press "Save"                              # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    Then I should see "Extract Settings"            # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Table"                        # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'etl-config'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Set pre and post-processing SQL                                                             # features/etl-config.feature:36
    When I follow configuration "behat-config-test"                                                     # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowConfiguration()
    And I fill in "Pre-Processing SQL" with "CREATE TABLE IF NOT EXISTS pre_test (i int);"              # IU\RedCapEtlModule\WebTests\FeatureContext::fillField()
    And I fill in "Post-Processing SQL" with "CREATE TABLE IF NOT EXISTS post_test (j int);"            # IU\RedCapEtlModule\WebTests\FeatureContext::fillField()
    And I press "Save"                                                                                  # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    Then the "Pre-Processing SQL" field should contain "CREATE TABLE IF NOT EXISTS pre_test (i int);"   # IU\RedCapEtlModule\WebTests\FeatureContext::assertFieldContains()
    Then the "Post-Processing SQL" field should contain "CREATE TABLE IF NOT EXISTS post_test (j int);" # IU\RedCapEtlModule\WebTests\FeatureContext::assertFieldContains()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'etl-config'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Save and exit configuration             # features/etl-config.feature:44
    When I follow configuration "behat-config-test" # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowConfiguration()
    And I press "Save and Exit"                     # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    Then I should see "Configuration Name"          # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "behat-config-test"            # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'etl-config'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Check rules for configuration           # features/etl-config.feature:50
    When I follow configuration "behat-config-test" # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowConfiguration()
    And I configure configuration "behat"           # IU\RedCapEtlModule\WebTests\FeatureContext::iConfigureConfiguration()
    And I press "Check Rules"                       # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    Then I should see "Transformation Rules Check"  # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Status: valid"                # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    But I should not see "Error:"                   # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'etl-config'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Run configuration                                     # features/etl-config.feature:58
    When I follow "Run"                                           # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I select "task" from "configType"                         # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I select "behat-config-test" from "configName"            # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I select "(embedded server)" from "server"                # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I press "Run"                                             # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I wait for 4 seconds                                      # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    Then I should see "ETL Configuration"                         # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Run"                                        # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "behat-config-test"                          # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Created table"                              # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Number of record_ids found: 100"            # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Processing complete."                       # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And database table "enrollment" should contain 100 rows       # IU\RedCapEtlModule\WebTests\FeatureContext::databaseTableShouldContainRows()
    And database table "redcap_project_info" should contain 1 row # IU\RedCapEtlModule\WebTests\FeatureContext::databaseTableShouldContainRows()
    But I should not see "Error:"                                 # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'etl-config'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Copy configuration                                        # features/etl-config.feature:76
    When I follow "ETL Configurations"                                # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I copy configuration "behat-config-test" to "behat-copy-test" # IU\RedCapEtlModule\WebTests\FeatureContext::iCopyConfiguration()
    Then I should see "behat-config-test"                             # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "behat-copy-test"                                # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'etl-config'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Rename configuration                                        # features/etl-config.feature:83
    When I follow "ETL Configurations"                                  # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I rename configuration "behat-copy-test" to "behat-rename-test" # IU\RedCapEtlModule\WebTests\FeatureContext::iRenameConfiguration()
    Then I should see "behat-rename-test"                               # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    But I should not see "behat-copy-test"                              # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'etl-config'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Delete renamed configuration           # features/etl-config.feature:90
    When I follow "ETL Configurations"             # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I delete configuration "behat-rename-test" # IU\RedCapEtlModule\WebTests\FeatureContext::iDeleteConfiguration()
    Then I should not see "behat-rename-test"      # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()
    But I should see "behat-config-test"           # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'etl-config'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Delete configuration                   # features/etl-config.feature:97
    When I follow "ETL Configurations"             # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I delete configuration "behat-config-test" # IU\RedCapEtlModule\WebTests\FeatureContext::iDeleteConfiguration()
    Then I should not see "behat-config-test"      # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

11 scenarios (11 passed)
112 steps (112 passed)
0m40.16s (12.61Mb)
┌─ @BeforeFeature # IU\RedCapEtlModule\WebTests\FeatureContext::setupFeature()
│
│  Initializing admin config
│  Initializing etl servers
│  
│
Feature: ETL Workflows
  In order to use REDCap-ETL
  As a non-admin user
  I need to be able to create, copy, rename and delete workflows

  Background:                      # features/etl-workflow.feature:11
    Given I am on "/"              # IU\RedCapEtlModule\WebTests\FeatureContext::visit()
    And I am logged in as user     # IU\RedCapEtlModule\WebTests\FeatureContext::iAmLoggedInAsUser()
    When I follow "My Projects"    # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    When I select the test project # IU\RedCapEtlModule\WebTests\FeatureContext::iSelectTheTestProject()
    And I follow "REDCap-ETL"      # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow "ETL Workflows"   # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'etl-workflow'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Delete workflow as admin (to actually delete it from the system) # features/etl-workflow.feature:20
    When I log out                                                           # IU\RedCapEtlModule\WebTests\FeatureContext::iLogOut()
    And I access the admin interface                                         # IU\RedCapEtlModule\WebTests\FeatureContext::iAccessTheAdminInterface()
    When I follow "Workflows"                                                # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I admin delete workflow "behat-workflow-test" if it exists           # IU\RedCapEtlModule\WebTests\FeatureContext::iAdminDeleteWorkflowIfItExists()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'etl-workflow'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Create workflow configuration                    # features/etl-workflow.feature:26
    When I fill in "workflowName" with "behat-workflow-test" # IU\RedCapEtlModule\WebTests\FeatureContext::fillField()
    And I press "Add"                                        # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    Then I should see "behat-workflow-test"                  # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    But I should not see "Error:"                            # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'etl-workflow'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Copy workflow                                                   # features/etl-workflow.feature:32
    And I copy workflow "behat-workflow-test" to "behat-workflow-copy-test" # IU\RedCapEtlModule\WebTests\FeatureContext::iCopyWorkflow()
    Then I should see "behat-workflow-test"                                 # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "behat-workflow-copy-test"                             # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should not see "Error:"                                           # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'etl-workflow'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Rename workflow                                                           # features/etl-workflow.feature:38
    When I rename workflow "behat-workflow-copy-test" to "behat-workflow-rename-test" # IU\RedCapEtlModule\WebTests\FeatureContext::iRenameWorkflow()
    Then I should see "behat-workflow-rename-test"                                    # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    But I should not see "behat-workflow-copy-test"                                   # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'etl-workflow'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Delete renamed workflow                     # features/etl-workflow.feature:43
    When I delete workflow "behat-workflow-rename-test" # IU\RedCapEtlModule\WebTests\FeatureContext::iDeleteWorkflow()
    Then I should not see "behat-workflow-rename-test"  # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()
    And I should not see "Error:"                       # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()
    But I should see "behat-workflow-test"              # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'etl-workflow'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Delete renamed workflow as admin (to actually delete it from the system) # features/etl-workflow.feature:49
    When I log out                                                                   # IU\RedCapEtlModule\WebTests\FeatureContext::iLogOut()
    And I access the admin interface                                                 # IU\RedCapEtlModule\WebTests\FeatureContext::iAccessTheAdminInterface()
    When I follow "Workflows"                                                        # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I admin delete workflow "behat-workflow-rename-test"                         # IU\RedCapEtlModule\WebTests\FeatureContext::iAdminDeleteWorkflow()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'etl-workflow'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Delete workflow configuration        # features/etl-workflow.feature:55
    When I delete workflow "behat-workflow-test" # IU\RedCapEtlModule\WebTests\FeatureContext::iDeleteWorkflow()
    Then I should not see "behat-workflow-test"  # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()
    And I should not see "Error:"                # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

7 scenarios (7 passed)
68 steps (68 passed)
0m26.25s (12.58Mb)
┌─ @BeforeFeature # IU\RedCapEtlModule\WebTests\FeatureContext::setupFeature()
│
│  Initializing admin config
│  Initializing etl servers
│  
│
Feature: User-Interface
  In order to use REDCap-ETL
  As a non-admin user
  I need to be able to create, copy, rename and delete configurations
  and get help for a REDCap-ETL enabled project

  Background:                      # features/extract-filter.feature:12
    Given I am on "/"              # IU\RedCapEtlModule\WebTests\FeatureContext::visit()
    And I am logged in as user     # IU\RedCapEtlModule\WebTests\FeatureContext::iAmLoggedInAsUser()
    When I follow "My Projects"    # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    When I select the test project # IU\RedCapEtlModule\WebTests\FeatureContext::iSelectTheTestProject()
    And I follow "REDCap-ETL"      # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'extract-filter'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Delete configuration if it exists                    # features/extract-filter.feature:19
    When I delete configuration "behat-config-test" if it exists # IU\RedCapEtlModule\WebTests\FeatureContext::iDeleteConfigurationIfExists()
    Then I should not see "behat-config-test"                    # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'extract-filter'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Create configuration                                # features/extract-filter.feature:23
    When I fill in "configurationName" with "behat-config-test" # IU\RedCapEtlModule\WebTests\FeatureContext::fillField()
    And I press "Add"                                           # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    Then I should see "behat-config-test"                       # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    But I should not see "Error:"                               # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'extract-filter'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Configure configuration                 # features/extract-filter.feature:29
    When I follow configuration "behat-config-test" # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowConfiguration()
    And I configure configuration "behat"           # IU\RedCapEtlModule\WebTests\FeatureContext::iConfigureConfiguration()
    And I press "Save"                              # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    Then I should see "Extract Settings"            # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Table"                        # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'extract-filter'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Set extract filter                                                # features/extract-filter.feature:36
    When I follow configuration "behat-config-test"                           # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowConfiguration()
    And I fill in "Extract Filter Logic" with "[record_id] < 1005"            # IU\RedCapEtlModule\WebTests\FeatureContext::fillField()
    And I press "Save"                                                        # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    Then the "Extract Filter Logic" field should contain "[record_id] < 1005" # IU\RedCapEtlModule\WebTests\FeatureContext::assertFieldContains()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'extract-filter'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Save and exit configuration             # features/extract-filter.feature:42
    When I follow configuration "behat-config-test" # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowConfiguration()
    And I press "Save and Exit"                     # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    Then I should see "Configuration Name"          # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "behat-config-test"            # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'extract-filter'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Run configuration                                     # features/extract-filter.feature:48
    When I follow "Run"                                           # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I select "task" from "configType"                         # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I select "behat-config-test" from "configName"            # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I select "(embedded server)" from "server"                # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I press "Run"                                             # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I wait for 4 seconds                                      # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    Then I should see "ETL Configuration"                         # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Run"                                        # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "behat-config-test"                          # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Created table"                              # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Number of record_ids found: 4"              # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Processing complete."                       # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And database table "enrollment" should contain 4 rows         # IU\RedCapEtlModule\WebTests\FeatureContext::databaseTableShouldContainRows()
    And database table "redcap_project_info" should contain 1 row # IU\RedCapEtlModule\WebTests\FeatureContext::databaseTableShouldContainRows()
    But I should not see "Error:"                                 # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

6 scenarios (6 passed)
64 steps (64 passed)
0m24.32s (12.60Mb)
┌─ @BeforeFeature # IU\RedCapEtlModule\WebTests\FeatureContext::setupFeature()
│
│  Initializing admin config
│  Initializing etl servers
│  
│
Feature: Zipped CSV file dowload functionality
  In order to download zipped CSV files from the ETL process
  As an admin
  I need to be able to modify the maximum filesize of a file to be downloaded

  Background:                         # features/file-dowload-admin.feature:11
    Given I am on "/"                 # IU\RedCapEtlModule\WebTests\FeatureContext::visit()
    When I access the admin interface # IU\RedCapEtlModule\WebTests\FeatureContext::iAccessTheAdminInterface()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'file-dowload-admin'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Change maximum file size                            # features/file-dowload-admin.feature:15
    When I follow "Servers"                                     # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow server "(embedded server)"                     # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowServer()
    And I fill in "maxZipDownloadFileSize" with "77"            # IU\RedCapEtlModule\WebTests\FeatureContext::fillField()
    And I press "Save"                                          # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I follow server "(embedded server)"                     # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowServer()
    Then the "maxZipDownloadFileSize" field should contain "77" # IU\RedCapEtlModule\WebTests\FeatureContext::assertFieldContains()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'file-dowload-admin'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Invoke default max file size                         # features/file-dowload-admin.feature:23
    When I follow "Servers"                                      # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow server "(embedded server)"                      # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowServer()
    And I fill in "maxZipDownloadFileSize" with ""               # IU\RedCapEtlModule\WebTests\FeatureContext::fillField()
    And I press "Save"                                           # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I follow server "(embedded server)"                      # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowServer()
    Then the "maxZipDownloadFileSize" field should contain "100" # IU\RedCapEtlModule\WebTests\FeatureContext::assertFieldContains()

2 scenarios (2 passed)
16 steps (16 passed)
0m11.96s (12.56Mb)
┌─ @BeforeFeature # IU\RedCapEtlModule\WebTests\FeatureContext::setupFeature()
│
│  Initializing admin config
│  Initializing etl servers
│  
│
Feature: Zipped CSV file dowload functionality
  In order to download zipped CSV files from the ETL process
  As a non-admin user
  I need to be able specify to download the file

  Background:                      # features/file-dowload-user.feature:11
    Given I am on "/"              # IU\RedCapEtlModule\WebTests\FeatureContext::visit()
    And I am logged in as user     # IU\RedCapEtlModule\WebTests\FeatureContext::iAmLoggedInAsUser()
    When I follow "My Projects"    # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    When I select the test project # IU\RedCapEtlModule\WebTests\FeatureContext::iSelectTheTestProject()
    And I follow "REDCap-ETL"      # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'file-dowload-user'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Initialize by deleting test configuration if it exists # features/file-dowload-user.feature:18
    When I follow "ETL Configurations"                             # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I delete configuration "behat-config-test" if it exists    # IU\RedCapEtlModule\WebTests\FeatureContext::iDeleteConfigurationIfExists()
    Then I should not see "behat-config-test"                      # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'file-dowload-user'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Confirm dataTarget element is displayed correctly   # features/file-dowload-user.feature:23
    When I fill in "configurationName" with "behat-config-test" # IU\RedCapEtlModule\WebTests\FeatureContext::fillField()
    And I press "Add"                                           # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I follow configuration "behat-config-test"              # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowConfiguration()
    And I configure configuration "behat"                       # IU\RedCapEtlModule\WebTests\FeatureContext::iConfigureConfiguration()
    And I press "Save"                                          # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I follow "Run"                                          # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I select "workflow" from "configType"                   # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I wait for 2 seconds                                    # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    Then I should not see "Load data into database"             # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()
    When I select "task" from "configType"                      # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I select "behat-config-test" from "configName"          # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I select "(embedded server)" from "server"              # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I wait for 2 seconds                                    # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    Then I should see "Load data into database"                 # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    When I follow "Run"                                         # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I select "task" from "configType"                       # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I select "behat-config-test" from "configName"          # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I select "(embedded server)" from "server"              # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I wait for 2 seconds                                    # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    And I select "csv_zip" from "dataTarget"                    # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    Then I should see "Export data as CSV zip file"             # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'file-dowload-user'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Run with database as target                # features/file-dowload-user.feature:48
    When I follow "Run"                                # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I select "task" from "configType"              # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I select "behat-config-test" from "configName" # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I select "(embedded server)" from "server"     # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I wait for 1 seconds                           # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    And I select "db" from "dataTarget"                # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I press "Run"                                  # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I wait for 4 seconds                           # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    Then I should see "Created table 'root'"           # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'file-dowload-user'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Set max Zip file size                                # features/file-dowload-user.feature:59
    When I log out                                               # IU\RedCapEtlModule\WebTests\FeatureContext::iLogOut()
    And I access the admin interface                             # IU\RedCapEtlModule\WebTests\FeatureContext::iAccessTheAdminInterface()
    And I follow "Servers"                                       # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow server "(embedded server)"                      # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowServer()
    And I fill in "maxZipDownloadFileSize" with "124"            # IU\RedCapEtlModule\WebTests\FeatureContext::fillField()
    And I press "Save"                                           # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I follow server "(embedded server)"                      # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowServer()
    Then the "maxZipDownloadFileSize" field should contain "124" # IU\RedCapEtlModule\WebTests\FeatureContext::assertFieldContains()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'file-dowload-user'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Run with zip base as target                # features/file-dowload-user.feature:69
    When I follow "Run"                                # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I select "task" from "configType"              # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I select "behat-config-test" from "configName" # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I select "(embedded server)" from "server"     # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I wait for 1 seconds                           # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    And I select "csv_zip" from "dataTarget"           # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I press "Run"                                  # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I wait for 6 seconds                           # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    Then a downloaded file should be found             # IU\RedCapEtlModule\WebTests\FeatureContext::aDownloadedFileShouldBeFound()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'file-dowload-user'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Run zip file as target and max file size too small # features/file-dowload-user.feature:80
    When I log out                                             # IU\RedCapEtlModule\WebTests\FeatureContext::iLogOut()
    And I access the admin interface                           # IU\RedCapEtlModule\WebTests\FeatureContext::iAccessTheAdminInterface()
    And I follow "Servers"                                     # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow server "(embedded server)"                    # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowServer()
    And I fill in "maxZipDownloadFileSize" with ".015"         # IU\RedCapEtlModule\WebTests\FeatureContext::fillField()
    And I press "Save"                                         # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    When I log out                                             # IU\RedCapEtlModule\WebTests\FeatureContext::iLogOut()
    And I am logged in as user                                 # IU\RedCapEtlModule\WebTests\FeatureContext::iAmLoggedInAsUser()
    When I follow "My Projects"                                # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    When I select the test project                             # IU\RedCapEtlModule\WebTests\FeatureContext::iSelectTheTestProject()
    And I follow "REDCap-ETL"                                  # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow "Run"                                         # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I select "task" from "configType"                      # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I select "behat-config-test" from "configName"         # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I select "(embedded server)" from "server"             # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I wait for 1 seconds                                   # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    And I select "csv_zip" from "dataTarget"                   # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I press "Run"                                          # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I wait for 6 seconds                                   # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    Then I should see "ERROR: CSV zip"                         # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'file-dowload-user'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Clean up max Zip file size                           # features/file-dowload-user.feature:104
    When I log out                                               # IU\RedCapEtlModule\WebTests\FeatureContext::iLogOut()
    And I access the admin interface                             # IU\RedCapEtlModule\WebTests\FeatureContext::iAccessTheAdminInterface()
    And I follow "Servers"                                       # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow server "(embedded server)"                      # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowServer()
    And I fill in "maxZipDownloadFileSize" with "124"            # IU\RedCapEtlModule\WebTests\FeatureContext::fillField()
    And I press "Save"                                           # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I follow server "(embedded server)"                      # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowServer()
    Then the "maxZipDownloadFileSize" field should contain "124" # IU\RedCapEtlModule\WebTests\FeatureContext::assertFieldContains()

7 scenarios (7 passed)
113 steps (113 passed)
1m6.69s (12.60Mb)
┌─ @BeforeFeature # IU\RedCapEtlModule\WebTests\FeatureContext::setupFeature()
│
│  Initializing admin config
│  Initializing etl servers
│  
│
Feature: User-Interface
  In order to use REDCap-ETL
  As a non-admin user
  I need to be able to create, copy, rename and delete configurations
  and get help for a REDCap-ETL enabled project

  Background:                      # features/help.feature:12
    Given I am on "/"              # IU\RedCapEtlModule\WebTests\FeatureContext::visit()
    And I am logged in as user     # IU\RedCapEtlModule\WebTests\FeatureContext::iAmLoggedInAsUser()
    And I follow "My Projects"     # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    When I select the test project # IU\RedCapEtlModule\WebTests\FeatureContext::iSelectTheTestProject()
    And I follow "REDCap-ETL"      # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'help'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Delete configuration if it exists                  # features/help.feature:19
    When I delete configuration "behat-help-test" if it exists # IU\RedCapEtlModule\WebTests\FeatureContext::iDeleteConfigurationIfExists()
    And I wait for 2 seconds                                   # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    Then I should not see "behat-help-test"                    # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'help'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Create configuration                             # features/help.feature:24
    And I fill in "configurationName" with "behat-help-test" # IU\RedCapEtlModule\WebTests\FeatureContext::fillField()
    And I press "Add"                                        # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    Then I should see "behat-help-test"                      # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'help'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Batch size help                                                                   # features/help.feature:29
    When I follow "configure-behat-help-test"                                                 # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow "batch-size-help-link"                                                       # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    Then I should see "The batch size indicates how many REDCap record IDs will be processed" # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "View text on separate page"                                             # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'help'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Batch size help on separate page                                                  # features/help.feature:35
    When I follow "configure-behat-help-test"                                                 # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow "batch-size-help-link"                                                       # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I wait for 2 seconds                                                                  # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    And I follow "batch-size-help-page" to new window                                         # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowLinkToNewWindow()
    Then I should see "The batch size indicates how many REDCap record IDs will be processed" # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    But I should not see "View text on separate page"                                         # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

4 scenarios (4 passed)
36 steps (36 passed)
0m25.51s (12.57Mb)
┌─ @BeforeFeature # IU\RedCapEtlModule\WebTests\FeatureContext::setupFeature()
│
│  Initializing admin config
│  Initializing etl servers
│  
│
Feature: User-Interface
  In order to use REDCap-ETL
  As a non-admin user
  I need to be able to create, copy, rename and delete configurations
  and get help for a REDCap-ETL enabled project

  Background:                      # features/schedule.feature:12
    Given I am on "/"              # IU\RedCapEtlModule\WebTests\FeatureContext::visit()
    And I am logged in as user     # IU\RedCapEtlModule\WebTests\FeatureContext::iAmLoggedInAsUser()
    And I follow "My Projects"     # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    When I select the test project # IU\RedCapEtlModule\WebTests\FeatureContext::iSelectTheTestProject()
    And I follow "REDCap-ETL"      # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'schedule'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Delete existing schedule configuration (if any)    # features/schedule.feature:19
    When I follow "ETL Configurations"                         # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I delete configuration "behat-sched-test" if it exists # IU\RedCapEtlModule\WebTests\FeatureContext::iDeleteConfigurationIfExists()
    Then I should not see "behat-sched-test"                   # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()
    And I should not see "Error:"                              # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'schedule'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Create configuration                               # features/schedule.feature:25
    When I fill in "configurationName" with "behat-sched-test" # IU\RedCapEtlModule\WebTests\FeatureContext::fillField()
    And I press "Add"                                          # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    Then I should see "behat-sched-test"                       # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'schedule'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Configure configuration                                                                 # features/schedule.feature:30
    When I follow configuration "behat-sched-test"                                                  # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowConfiguration()
    And I configure configuration "behat"                                                           # IU\RedCapEtlModule\WebTests\FeatureContext::iConfigureConfiguration()
    And I fill in "Table name prefix" with "sched_"                                                 # IU\RedCapEtlModule\WebTests\FeatureContext::fillField()
    And I fill in "email_subject" with "REDCap-ETL Module web test 1/3: schedule ETL configuration" # IU\RedCapEtlModule\WebTests\FeatureContext::fillField()
    And I check "email_errors"                                                                      # IU\RedCapEtlModule\WebTests\FeatureContext::checkOption()
    And I check "email_summary"                                                                     # IU\RedCapEtlModule\WebTests\FeatureContext::checkOption()
    And I press "Save"                                                                              # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    Then I should see "Extract Settings"                                                            # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Table"                                                                        # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And the "Table name prefix" field should contain "sched_"                                       # IU\RedCapEtlModule\WebTests\FeatureContext::assertFieldContains()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'schedule'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Schedule configuration                    # features/schedule.feature:42
    When I follow "Schedule"                          # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I select "task" from "configType"             # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I select "behat-sched-test" from "configName" # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I select "(embedded server)" from "server"    # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I schedule for next hour                      # IU\RedCapEtlModule\WebTests\FeatureContext::iScheduleForNextHour()
    And I press "Save"                                # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I wait for 4 seconds                          # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    Then I should see "Save"                          # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "ETL Server"                     # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "(embedded server)"              # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

4 scenarios (4 passed)
47 steps (47 passed)
0m23.37s (12.59Mb)
┌─ @BeforeFeature # IU\RedCapEtlModule\WebTests\FeatureContext::setupFeature()
│
│  Initializing admin config
│  Initializing etl servers
│  
│
Feature: Server access level management
  In order to manage access to servers
  As an admin
  I need to be able to set the access level and assign and remove allowed users for private-level servers

  Background:                         # features/server-access-level-admin.feature:11
    Given I am on "/"                 # IU\RedCapEtlModule\WebTests\FeatureContext::visit()
    When I access the admin interface # IU\RedCapEtlModule\WebTests\FeatureContext::iAccessTheAdminInterface()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'server-access-level-admin'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Set the access level to admin                                    # features/server-access-level-admin.feature:15
    When I follow "Servers"                                                  # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I delete server "local-server"                                       # IU\RedCapEtlModule\WebTests\FeatureContext::iDeleteServer()
    And I wait for 1 seconds                                                 # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    And I fill in "server-name" with "local-server"                          # IU\RedCapEtlModule\WebTests\FeatureContext::fillField()
    And I press "Add Server"                                                 # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I wait for 1 seconds                                                 # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    And I follow server "local-server"                                       # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowServer()
    And I configure server "local"                                           # IU\RedCapEtlModule\WebTests\FeatureContext::iConfigureServer()
    And I wait for 1 seconds                                                 # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    And I follow "Servers"                                                   # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow server "local-server"                                       # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowServer()
    And I select "admin" from "accessLevel"                                  # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I wait for 5 seconds                                                 # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    Then the "#accessLevelId option:selected" element should contain "admin" # IU\RedCapEtlModule\WebTests\FeatureContext::assertElementContains()
    And I should not see "Users Currently Granted Access"                    # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()
    When I follow "Servers"                                                  # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    Then I should see "local-server" followed by "admin"                     # IU\RedCapEtlModule\WebTests\FeatureContext::iShouldSeeFollowedBy()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'server-access-level-admin'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Set the access level to public                                    # features/server-access-level-admin.feature:35
    When I follow "Servers"                                                   # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow server "local-server"                                        # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowServer()
    And I select "public" from "accessLevel"                                  # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I wait for 5 seconds                                                  # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    Then the "#accessLevelId option:selected" element should contain "public" # IU\RedCapEtlModule\WebTests\FeatureContext::assertElementContains()
    But I should not see "Users Currently Granted Access"                     # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()
    When I follow "Servers"                                                   # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    Then I should see "local-server" followed by "public"                     # IU\RedCapEtlModule\WebTests\FeatureContext::iShouldSeeFollowedBy()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'server-access-level-admin'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Set the access level to private                                    # features/server-access-level-admin.feature:46
    When I follow "Servers"                                                    # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow server "local-server"                                         # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowServer()
    And I select "private" from "accessLevel"                                  # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I wait for 5 seconds                                                   # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    Then the "#accessLevelId option:selected" element should contain "private" # IU\RedCapEtlModule\WebTests\FeatureContext::assertElementContains()
    And I should see "Users Currently Granted Access"                          # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Add User Access"                                         # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'server-access-level-admin'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Access the User page for server with private access # features/server-access-level-admin.feature:55
    When I follow "Servers"                                     # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow server "(embedded server)"                     # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowServer()
    And I select "private" from "accessLevel"                   # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I follow "Add User Access"                              # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    Then I should see "User:"                                   # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'server-access-level-admin'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Add a user to a server with private access                      # features/server-access-level-admin.feature:62
    When I follow "Servers"                                                 # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow server "(embedded server)"                                 # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowServer()
    And I select "private" from "accessLevel"                               # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I follow "Add User Access"                                          # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow "List"                                                     # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    Then I "should" see a "link" item for the user                          # IU\RedCapEtlModule\WebTests\FeatureContext::iSeeAnItemForTheUser()
    When I click on the user                                                # IU\RedCapEtlModule\WebTests\FeatureContext::iClickOnTheUser()
    Then I should see "Server private-level access for user"                # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "(embedded server)"                                    # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    When I check "accessCheckbox[(embedded server)]"                        # IU\RedCapEtlModule\WebTests\FeatureContext::checkOption()
    And I press "Save"                                                      # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I click on the user                                                 # IU\RedCapEtlModule\WebTests\FeatureContext::iClickOnTheUser()
    Then the checkbox "accessCheckbox[(embedded server)]" should be checked # IU\RedCapEtlModule\WebTests\FeatureContext::assertCheckboxChecked()
    When I follow "Servers"                                                 # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow server "(embedded server)"                                 # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowServer()
    Then I "should" see a "remove user checkbox" item for the user          # IU\RedCapEtlModule\WebTests\FeatureContext::iSeeAnItemForTheUser()
    And I should see "Add User Access"                                      # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'server-access-level-admin'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Using the server page, remove an assigned user from a server with private access # features/server-access-level-admin.feature:84
    When I follow "Servers"                                                                  # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow server "(embedded server)"                                                  # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowServer()
    And I select "private" from "accessLevel"                                                # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I follow "Add User Access"                                                           # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow "List"                                                                      # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I click on the user                                                                  # IU\RedCapEtlModule\WebTests\FeatureContext::iClickOnTheUser()
    And I check "accessCheckbox[(embedded server)]"                                          # IU\RedCapEtlModule\WebTests\FeatureContext::checkOption()
    And I press "Save"                                                                       # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I follow "Servers"                                                                   # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow server "(embedded server)"                                                  # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowServer()
    And I check the box to remove the user                                                   # IU\RedCapEtlModule\WebTests\FeatureContext::iCheckTheBoxToRemoveTheUser()
    And I press "Save"                                                                       # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I follow server "(embedded server)"                                                  # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowServer()
    Then I "should not" see a "remove user checkbox" item for the user                       # IU\RedCapEtlModule\WebTests\FeatureContext::iSeeAnItemForTheUser()
    When I follow "Users"                                                                    # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I click on the user                                                                  # IU\RedCapEtlModule\WebTests\FeatureContext::iClickOnTheUser()
    Then the checkbox "accessCheckbox[(embedded server)]" should be unchecked                # IU\RedCapEtlModule\WebTests\FeatureContext::assertCheckboxNotChecked()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'server-access-level-admin'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Using the user page, remove an assigned user from a server with private access # features/server-access-level-admin.feature:104
    When I follow "Servers"                                                                # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow server "(embedded server)"                                                # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowServer()
    And I select "private" from "accessLevel"                                              # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I follow "Add User Access"                                                         # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow "List"                                                                    # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I click on the user                                                                # IU\RedCapEtlModule\WebTests\FeatureContext::iClickOnTheUser()
    And I check "accessCheckbox[(embedded server)]"                                        # IU\RedCapEtlModule\WebTests\FeatureContext::checkOption()
    And I press "Save"                                                                     # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I click on the user                                                                # IU\RedCapEtlModule\WebTests\FeatureContext::iClickOnTheUser()
    And I uncheck "accessCheckbox[(embedded server)]"                                      # IU\RedCapEtlModule\WebTests\FeatureContext::uncheckOption()
    And I press "Save"                                                                     # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I follow "Servers"                                                                 # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow server "(embedded server)"                                                # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowServer()
    Then I "should not" see a "remove user checkbox" item for the user                     # IU\RedCapEtlModule\WebTests\FeatureContext::iSeeAnItemForTheUser()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'server-access-level-admin'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Change the access level from private with users assigned to admin and do not delete the users list # features/server-access-level-admin.feature:120
    When I follow "Servers"                                                                                    # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow server "(embedded server)"                                                                    # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowServer()
    And I choose "private" as the access level                                                                 # IU\RedCapEtlModule\WebTests\FeatureContext::iChooseAsTheAccessLevel()
    And I follow "Add User Access"                                                                             # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow "List"                                                                                        # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I click on the user                                                                                    # IU\RedCapEtlModule\WebTests\FeatureContext::iClickOnTheUser()
    And I check "accessCheckbox[(embedded server)]"                                                            # IU\RedCapEtlModule\WebTests\FeatureContext::checkOption()
    And I press "Save"                                                                                         # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I wait for 2 seconds                                                                                   # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    And I follow "Servers"                                                                                     # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow server "(embedded server)"                                                                    # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowServer()
    And I choose "admin" as the access level and click "Save list"                                             # IU\RedCapEtlModule\WebTests\FeatureContext::iChooseAsTheAccessLevelAndClick()
    And I wait for 5 seconds                                                                                   # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    Then the "#accessLevelId option:selected" element should contain "admin"                                   # IU\RedCapEtlModule\WebTests\FeatureContext::assertElementContains()
    And I "should not" see a "remove user checkbox" item for the user                                          # IU\RedCapEtlModule\WebTests\FeatureContext::iSeeAnItemForTheUser()
    When I choose "private" as the access level                                                                # IU\RedCapEtlModule\WebTests\FeatureContext::iChooseAsTheAccessLevel()
    Then I should see "Users Currently Granted Access"                                                         # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Add User Access"                                                                         # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I "should" see a "remove user checkbox" item for the user                                              # IU\RedCapEtlModule\WebTests\FeatureContext::iSeeAnItemForTheUser()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'server-access-level-admin'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Change the access level from private with users assigned to public and delete the users list # features/server-access-level-admin.feature:142
    When I follow "Servers"                                                                              # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow server "(embedded server)"                                                              # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowServer()
    And I choose "public" as the access level and click "Delete list"                                    # IU\RedCapEtlModule\WebTests\FeatureContext::iChooseAsTheAccessLevelAndClick()
    And I press "Save"                                                                                   # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I wait for 5 seconds                                                                             # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    When I follow "Servers"                                                                              # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow server "(embedded server)"                                                              # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowServer()
    Then the "#accessLevelId option:selected" element should contain "public"                            # IU\RedCapEtlModule\WebTests\FeatureContext::assertElementContains()

9 scenarios (9 passed)
130 steps (130 passed)
1m26.47s (13.01Mb)
┌─ @BeforeFeature # IU\RedCapEtlModule\WebTests\FeatureContext::setupFeature()
│
│  Initializing admin config
│  Initializing etl servers
│  
│
Feature: Server access level management
  In order to manage access to servers
  As an admin
  I need to be able to set the access level and assign and remove allowed users for private-level servers

  Background:         # features/server-access-level-user.feature:11
    Given I am on "/" # IU\RedCapEtlModule\WebTests\FeatureContext::visit()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'server-access-level-user'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: If needed, assign a private-level access to the embedded server and add the user # features/server-access-level-user.feature:14
    When I access the admin interface                                                        # IU\RedCapEtlModule\WebTests\FeatureContext::iAccessTheAdminInterface()
    And I follow "Servers"                                                                   # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow server "(embedded server)"                                                  # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowServer()
    And I select "private" from "accessLevel"                                                # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I follow "Add User Access"                                                           # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow "List"                                                                      # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I click on the user                                                                  # IU\RedCapEtlModule\WebTests\FeatureContext::iClickOnTheUser()
    And I check "accessCheckbox[(embedded server)]"                                          # IU\RedCapEtlModule\WebTests\FeatureContext::checkOption()
    And I press "Save"                                                                       # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I follow "Servers"                                                                   # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I delete server "local-server"                                                       # IU\RedCapEtlModule\WebTests\FeatureContext::iDeleteServer()
    And I follow "Servers"                                                                   # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I fill in "server-name" with "local-server"                                          # IU\RedCapEtlModule\WebTests\FeatureContext::fillField()
    And I press "Add Server"                                                                 # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I follow "Servers"                                                                   # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow server "local-server"                                                       # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowServer()
    And I configure server "local"                                                           # IU\RedCapEtlModule\WebTests\FeatureContext::iConfigureServer()
    And I follow "Servers"                                                                   # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow server "local-server"                                                       # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowServer()
    And I select "public" from "accessLevel"                                                 # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I follow "Servers"                                                                   # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I delete server "admin-test"                                                         # IU\RedCapEtlModule\WebTests\FeatureContext::iDeleteServer()
    And I follow "Servers"                                                                   # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I copy server "local-server" to "admin-test"                                         # IU\RedCapEtlModule\WebTests\FeatureContext::iCopyServer()
    And I follow "Servers"                                                                   # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow server "admin-test"                                                         # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowServer()
    And I select "admin" from "accessLevel"                                                  # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I follow "Servers"                                                                   # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I delete server "private-test"                                                       # IU\RedCapEtlModule\WebTests\FeatureContext::iDeleteServer()
    And I wait for 3 seconds                                                                 # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    And I follow "List"                                                                      # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    Then I should not see "private-test"                                                     # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()
    When I copy server "local-server" to "private-test"                                      # IU\RedCapEtlModule\WebTests\FeatureContext::iCopyServer()
    And I follow "Servers"                                                                   # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow server "private-test"                                                       # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowServer()
    And I select "private" from "accessLevel"                                                # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I wait for 5 seconds                                                                 # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'server-access-level-user'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Log in a user who has been allowed private-level access and verify the correct servers are listed on the Run tab # features/server-access-level-user.feature:58
    And I log in as user and access REDCap-ETL for test project                                                              # IU\RedCapEtlModule\WebTests\FeatureContext::iLogInAsUserAndAccessRedCapEtlForTestProject()
    And I follow "Run"                                                                                                       # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I select "task" from "configType"                                                                                    # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    Then the "#serverId" element should contain "(embedded server)"                                                          # IU\RedCapEtlModule\WebTests\FeatureContext::assertElementContains()
    And the "#serverId" element should contain "local-server"                                                                # IU\RedCapEtlModule\WebTests\FeatureContext::assertElementContains()
    But the "#serverId" element should not contain "admin-test"                                                              # IU\RedCapEtlModule\WebTests\FeatureContext::assertElementNotContains()
    But the "#serverId" element should not contain "private-test"                                                            # IU\RedCapEtlModule\WebTests\FeatureContext::assertElementNotContains()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'server-access-level-user'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Log in a user who has been allowed private-level access and verify the correct servers are listed on the Schedule tab # features/server-access-level-user.feature:67
    When I log in as user and access REDCap-ETL for test project                                                                  # IU\RedCapEtlModule\WebTests\FeatureContext::iLogInAsUserAndAccessRedCapEtlForTestProject()
    And I follow "Schedule"                                                                                                       # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I select "task" from "configType"                                                                                         # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    Then the "#serverId" element should contain "(embedded server)"                                                               # IU\RedCapEtlModule\WebTests\FeatureContext::assertElementContains()
    And the "#serverId" element should contain "local-server"                                                                     # IU\RedCapEtlModule\WebTests\FeatureContext::assertElementContains()
    But the "#serverId" element should not contain "admin-test"                                                                   # IU\RedCapEtlModule\WebTests\FeatureContext::assertElementNotContains()
    But the "#serverId" element should not contain "private-test"                                                                 # IU\RedCapEtlModule\WebTests\FeatureContext::assertElementNotContains()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'server-access-level-user'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: For an admin user, verify they can see all servers on the Run tab # features/server-access-level-user.feature:76
    When I access the admin interface                                         # IU\RedCapEtlModule\WebTests\FeatureContext::iAccessTheAdminInterface()
    And I follow "Browse Projects"                                            # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I press "View all projects"                                           # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I select the test project                                             # IU\RedCapEtlModule\WebTests\FeatureContext::iSelectTheTestProject()
    And I follow "REDCap-ETL"                                                 # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow "Run"                                                        # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I select "task" from "configType"                                     # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    Then the "#serverId" element should contain "(embedded server)"           # IU\RedCapEtlModule\WebTests\FeatureContext::assertElementContains()
    And the "#serverId" element should contain "local-server"                 # IU\RedCapEtlModule\WebTests\FeatureContext::assertElementContains()
    And the "#serverId" element should contain "admin-test"                   # IU\RedCapEtlModule\WebTests\FeatureContext::assertElementContains()
    And the "#serverId" element should contain "private-test"                 # IU\RedCapEtlModule\WebTests\FeatureContext::assertElementContains()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'server-access-level-user'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: For an admin user, verify they can see all servers on the Schedule tab # features/server-access-level-user.feature:89
    When I access the admin interface                                              # IU\RedCapEtlModule\WebTests\FeatureContext::iAccessTheAdminInterface()
    And I follow "Browse Projects"                                                 # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I press "View all projects"                                                # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I select the test project                                                  # IU\RedCapEtlModule\WebTests\FeatureContext::iSelectTheTestProject()
    And I follow "REDCap-ETL"                                                      # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow "Schedule"                                                        # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I select "task" from "configType"                                          # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    Then the "#serverId" element should contain "(embedded server)"                # IU\RedCapEtlModule\WebTests\FeatureContext::assertElementContains()
    And the "#serverId" element should contain "local-server"                      # IU\RedCapEtlModule\WebTests\FeatureContext::assertElementContains()
    And the "#serverId" element should contain "admin-test"                        # IU\RedCapEtlModule\WebTests\FeatureContext::assertElementContains()
    And the "#serverId" element should contain "private-test"                      # IU\RedCapEtlModule\WebTests\FeatureContext::assertElementContains()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'server-access-level-user'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Change the access level from private with users assigned to public and delete the users list # features/server-access-level-user.feature:103
    When I access the admin interface                                                                    # IU\RedCapEtlModule\WebTests\FeatureContext::iAccessTheAdminInterface()
    And I follow "Servers"                                                                               # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow server "(embedded server)"                                                              # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowServer()
    And I choose "public" as the access level and click "Delete list"                                    # IU\RedCapEtlModule\WebTests\FeatureContext::iChooseAsTheAccessLevelAndClick()
    And I press "Save"                                                                                   # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I wait for 5 seconds                                                                             # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    When I follow "Servers"                                                                              # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow server "(embedded server)"                                                              # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowServer()
    Then the "#accessLevelId option:selected" element should contain "public"                            # IU\RedCapEtlModule\WebTests\FeatureContext::assertElementContains()

6 scenarios (6 passed)
88 steps (88 passed)
1m3.55s (13.00Mb)
┌─ @BeforeFeature # IU\RedCapEtlModule\WebTests\FeatureContext::setupFeature()
│
│  Initializing admin config
│  Initializing etl servers
│  
│
Feature: Server configuration management
  In order to manage servers
  As an admin
  I need to be able to create, configure, test, copy, delete and rename servers

  Background:                         # features/server-config.feature:11
    Given I am on "/"                 # IU\RedCapEtlModule\WebTests\FeatureContext::visit()
    When I access the admin interface # IU\RedCapEtlModule\WebTests\FeatureContext::iAccessTheAdminInterface()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'server-config'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Delete local servers (if they exist) # features/server-config.feature:15
    When I follow "Servers"                      # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I delete server "local-server"           # IU\RedCapEtlModule\WebTests\FeatureContext::iDeleteServer()
    And I delete server "local-server-copy"      # IU\RedCapEtlModule\WebTests\FeatureContext::iDeleteServer()
    And I delete server "local-server-rename"    # IU\RedCapEtlModule\WebTests\FeatureContext::iDeleteServer()
    And I wait for 4 seconds                     # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    Then I should see "(embedded server)"        # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    But I should not see "local-server"          # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()
    But I should not see "local-server-copy"     # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()
    But I should not see "local-server-rename"   # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()
    And I should not see "Error:"                # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'server-config'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Test embedded server configuration        # features/server-config.feature:27
    When I follow "Servers"                           # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow server "(embedded server)"           # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowServer()
    Then I should see "Data Load Options"             # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "CSV ZIP Download"               # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    But I should not see "Server Connection Settings" # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()
    But I should not see "Server Command Settings"    # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'server-config'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Test embedded server connection                    # features/server-config.feature:35
    When I follow "Servers"                                    # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow server "(embedded server)"                    # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowServer()
    And I press "Test Server Connection"                       # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    Then the "#testOutput" element should contain "REDCap-ETL" # IU\RedCapEtlModule\WebTests\FeatureContext::assertElementContains()
    And the "#testOutput" element should contain "found"       # IU\RedCapEtlModule\WebTests\FeatureContext::assertElementContains()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'server-config'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Create local server configuration       # features/server-config.feature:42
    When I follow "Servers"                         # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I fill in "server-name" with "local-server" # IU\RedCapEtlModule\WebTests\FeatureContext::fillField()
    And I press "Add Server"                        # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    Then I should see "local-server"                # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    But I should not see "Error: "                  # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'server-config'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Configure local server configuration # features/server-config.feature:49
    When I follow "Servers"                      # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow server "local-server"           # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowServer()
    And I configure server "local"               # IU\RedCapEtlModule\WebTests\FeatureContext::iConfigureServer()
    Then I should see "local-server"             # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'server-config'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Copy server configuration                       # features/server-config.feature:55
    When I follow "Servers"                                 # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I copy server "local-server" to "local-server-copy" # IU\RedCapEtlModule\WebTests\FeatureContext::iCopyServer()
    Then I should see "local-server-copy"                   # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    But I should not see "Error: "                          # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'server-config'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Rename copied server configuration                       # features/server-config.feature:61
    When I follow "Servers"                                          # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I rename server "local-server-copy" to "local-server-rename" # IU\RedCapEtlModule\WebTests\FeatureContext::iRenameServer()
    Then I should see "local-server-rename"                          # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    But I should not see "local-server-copy"                         # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()
    And I should not see "Error: "                                   # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'server-config'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Delete renamed configuration       # features/server-config.feature:68
    When I follow "Servers"                    # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I delete server "local-server-rename"  # IU\RedCapEtlModule\WebTests\FeatureContext::iDeleteServer()
    Then I should see "(embedded server)"      # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "local-server"            # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    But I should not see "local-server-rename" # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()
    And I should not see "Error: "             # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'server-config'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Create local server configuration that already exists # features/server-config.feature:76
    When I follow "Servers"                                       # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I fill in "server-name" with "local-server"               # IU\RedCapEtlModule\WebTests\FeatureContext::fillField()
    And I press "Add Server"                                      # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    Then I should see "Error: "                                   # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "already exists"                             # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

9 scenarios (9 passed)
68 steps (68 passed)
0m51.32s (12.87Mb)
┌─ @BeforeFeature # IU\RedCapEtlModule\WebTests\FeatureContext::setupFeature()
│
│  Initializing admin config
│  Initializing etl servers
│  
│
Feature: Transformation Rules Guide
  In order to use REDCap-ETL
  As a non-admin user
  I need to be able to see the Transformation Rules Guide for editing transformation rules for a configuration

  Background:                      # features/transformation-rules-guide.feature:11
    Given I am on "/"              # IU\RedCapEtlModule\WebTests\FeatureContext::visit()
    And I am logged in as user     # IU\RedCapEtlModule\WebTests\FeatureContext::iAmLoggedInAsUser()
    And I follow "My Projects"     # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    When I select the test project # IU\RedCapEtlModule\WebTests\FeatureContext::iSelectTheTestProject()
    And I follow "REDCap-ETL"      # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'transformation-rules-guide'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Delete configuration if it exists                         # features/transformation-rules-guide.feature:18
    When I delete configuration "behat-rules-guide-test" if it exists # IU\RedCapEtlModule\WebTests\FeatureContext::iDeleteConfigurationIfExists()
    Then I should not see "behat-rules-guide-test"                    # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'transformation-rules-guide'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Create configuration                                    # features/transformation-rules-guide.feature:22
    And I fill in "configurationName" with "behat-rules-guide-test" # IU\RedCapEtlModule\WebTests\FeatureContext::fillField()
    And I press "Add"                                               # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    Then I should see "behat-rules-guide-test"                      # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'transformation-rules-guide'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Transformation rules guide                      # features/transformation-rules-guide.feature:27
    When I follow "configure-behat-rules-guide-test"        # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I wait for 2 seconds                                # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    And I follow "Transformation Rules Guide" to new window # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowLinkToNewWindow()
    And I wait for 2 seconds                                # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    Then I should see "Transformation Rules"                # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "This is a simple example"             # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

3 scenarios (3 passed)
26 steps (26 passed)
0m23.50s (12.57Mb)
┌─ @BeforeFeature # IU\RedCapEtlModule\WebTests\FeatureContext::setupFeature()
│
│  Initializing admin config
│  Initializing etl servers
│  
│
Feature: User-Interface
  In order to use REDCap-ETL
  As a non-admin user
  I need to be able to view the REDCap-ETL external module pages
  for a REDCap-ETL enabled project

  Background:                      # features/user-interface.feature:12
    Given I am on "/"              # IU\RedCapEtlModule\WebTests\FeatureContext::visit()
    And I am logged in as user     # IU\RedCapEtlModule\WebTests\FeatureContext::iAmLoggedInAsUser()
    And I follow "My Projects"     # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    When I select the test project # IU\RedCapEtlModule\WebTests\FeatureContext::iSelectTheTestProject()
    And I follow "REDCap-ETL"      # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'user-interface'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Access REDCap-ETL home page for test project                                                       # features/user-interface.feature:19
    Then I should see tabs "ETL Configurations", "ETL Workflows", "Configure", "Run", "Schedule","User Manual" # IU\RedCapEtlModule\WebTests\FeatureContext::iShouldSeeTabs()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'user-interface'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Access REDCap-ETL ETL workflows page for test project # features/user-interface.feature:27
    When I follow "ETL Workflows"                                 # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    Then I should see "REDCap-ETL Workflow name:"                 # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Configure"                                  # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Run"                                        # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'user-interface'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Access REDCap-ETL configure page for test project # features/user-interface.feature:33
    When I follow "Configure"                                 # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    Then I should see "ETL Configuration"                     # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "ETL Workflow"                           # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'user-interface'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Access REDCap-ETL run page for test project # features/user-interface.feature:38
    When I follow "Run"                                 # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    Then I should see "ETL Configuration"               # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    Then I should see "ETL Workflow"                    # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'user-interface'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Access REDCap-ETL schedule page for test project # features/user-interface.feature:43
    When I follow "Schedule"                                 # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I wait for 10 seconds                                # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    Then I should see "ETL Configuration"                    # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "ETL Workflow"                          # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Server:"                               # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Sunday"                                # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Monday"                                # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Tuesday"                               # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Wednesday"                             # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Thursday"                              # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Friday"                                # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Saturday"                              # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "ETL Server"                            # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'user-interface'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Access REDCap-ETL user manual page for test project # features/user-interface.feature:58
    When I follow "User Manual"                                 # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    Then I should see "Overview"                                # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "REDCap-ETL Configurations"                # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Running REDCap-ETL"                       # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'user-interface'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Access ETL Configurations page using the tab # features/user-interface.feature:64
    When I follow "ETL Configurations"                   # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    Then I should see "REDCap-ETL configuration name:"   # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Add"                               # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

7 scenarios (7 passed)
66 steps (66 passed)
0m26.25s (12.86Mb)
┌─ @BeforeFeature # IU\RedCapEtlModule\WebTests\FeatureContext::setupFeature()
│
│  Initializing admin config
│  Initializing etl servers
│  
│
Feature: User-Interface
  In order to use REDCap-ETL
  As a non-admin user
  I need to be able to create, run and schedule workflows

  Background:                      # features/workflow.feature:11
    Given I am on "/"              # IU\RedCapEtlModule\WebTests\FeatureContext::visit()
    And I am logged in as user     # IU\RedCapEtlModule\WebTests\FeatureContext::iAmLoggedInAsUser()
    When I follow "My Projects"    # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    When I select the test project # IU\RedCapEtlModule\WebTests\FeatureContext::iSelectTheTestProject()
    And I follow "REDCap-ETL"      # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'workflow'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Delete workflow as admin                               # features/workflow.feature:20
    When I log out                                                 # IU\RedCapEtlModule\WebTests\FeatureContext::iLogOut()
    And I access the admin interface                               # IU\RedCapEtlModule\WebTests\FeatureContext::iAccessTheAdminInterface()
    When I follow "Workflows"                                      # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I admin delete workflow "behat-workflow-test" if it exists # IU\RedCapEtlModule\WebTests\FeatureContext::iAdminDeleteWorkflowIfItExists()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'workflow'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Delete config1 for workflow                                   # features/workflow.feature:26
    When I follow "ETL Configurations"                                    # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I delete configuration "behat-workflow-config1-test" if it exists # IU\RedCapEtlModule\WebTests\FeatureContext::iDeleteConfigurationIfExists()
    Then I should not see "behat-workflow-config1-test"                   # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'workflow'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Delete config2 for workflow                                   # features/workflow.feature:31
    When I follow "ETL Configurations"                                    # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I delete configuration "behat-workflow-config2-test" if it exists # IU\RedCapEtlModule\WebTests\FeatureContext::iDeleteConfigurationIfExists()
    Then I should not see "behat-workflow-config2-test"                   # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'workflow'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Create config1 for workflow                                   # features/workflow.feature:36
    When I fill in "configurationName" with "behat-workflow-config1-test" # IU\RedCapEtlModule\WebTests\FeatureContext::fillField()
    And I press "Add"                                                     # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    Then I should see "behat-workflow-config1-test"                       # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    But I should not see "Error:"                                         # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'workflow'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Configure config1 for workflow                    # features/workflow.feature:42
    When I follow configuration "behat-workflow-config1-test" # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowConfiguration()
    And I configure configuration "behat"                     # IU\RedCapEtlModule\WebTests\FeatureContext::iConfigureConfiguration()
    And I press "Save"                                        # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    Then I should see "Extract Settings"                      # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Table"                                  # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'workflow'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Save and exit config1 for workflow                # features/workflow.feature:49
    When I follow configuration "behat-workflow-config1-test" # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowConfiguration()
    And I press "Save and Exit"                               # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    Then I should see "Configuration Name"                    # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "behat-workflow-config1-test"            # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'workflow'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Create config2 for workflow                                   # features/workflow.feature:55
    When I fill in "configurationName" with "behat-workflow-config2-test" # IU\RedCapEtlModule\WebTests\FeatureContext::fillField()
    And I press "Add"                                                     # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    Then I should see "behat-workflow-config2-test"                       # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    But I should not see "Error:"                                         # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'workflow'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Configure config2 for workflow                    # features/workflow.feature:61
    When I follow configuration "behat-workflow-config2-test" # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowConfiguration()
    And I wait for 2 seconds                                  # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    And I configure configuration "behat"                     # IU\RedCapEtlModule\WebTests\FeatureContext::iConfigureConfiguration()
    And I press "Save"                                        # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    Then I should see "Extract Settings"                      # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Table"                                  # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'workflow'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Save and exit config2 for workflow                # features/workflow.feature:69
    When I follow configuration "behat-workflow-config2-test" # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowConfiguration()
    And I press "Save and Exit"                               # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    Then I should see "Configuration Name"                    # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "behat-workflow-config2-test"            # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'workflow'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Create workflow                                 # features/workflow.feature:75
    When I follow "ETL Workflows"                           # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I fill in "workflowName" with "behat-workflow-test" # IU\RedCapEtlModule\WebTests\FeatureContext::fillField()
    And I press "Add"                                       # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    Then I should see "behat-workflow-test"                 # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    But I should not see "Error:"                           # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'workflow'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Configure workflow                                                     # features/workflow.feature:82
    When I follow "ETL Workflows"                                                  # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow workflow "behat-workflow-test"                                    # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowWorkflow()
    And I rename task 1 to "Task1"                                                 # IU\RedCapEtlModule\WebTests\FeatureContext::iRenameTask()
    And I specify etl-configuration "behat-workflow-config1-test" for task "Task1" # IU\RedCapEtlModule\WebTests\FeatureContext::iSpecifyConfigForTask()
    And I add task for workflow                                                    # IU\RedCapEtlModule\WebTests\FeatureContext::iAddTaskForWorkflow()
    And I wait for 2 seconds                                                       # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    And I rename task 2 to "Task2"                                                 # IU\RedCapEtlModule\WebTests\FeatureContext::iRenameTask()
    And I specify etl-configuration "behat-workflow-config2-test" for task "Task2" # IU\RedCapEtlModule\WebTests\FeatureContext::iSpecifyConfigForTask()
    Then I should see tasks "Task1", "Task2"                                       # IU\RedCapEtlModule\WebTests\FeatureContext::iShouldSeeTasks()
    When I move task "Task2" up                                                    # IU\RedCapEtlModule\WebTests\FeatureContext::iMoveTaskUp()
    Then I should see tasks "Task2", "Task1"                                       # IU\RedCapEtlModule\WebTests\FeatureContext::iShouldSeeTasks()
    When I move task "Task2" down                                                  # IU\RedCapEtlModule\WebTests\FeatureContext::iMoveTaskDown()
    Then I should see tasks "Task1", "Task2"                                       # IU\RedCapEtlModule\WebTests\FeatureContext::iShouldSeeTasks()
    When I add task for workflow                                                   # IU\RedCapEtlModule\WebTests\FeatureContext::iAddTaskForWorkflow()
    And I rename task 3 to "Task3"                                                 # IU\RedCapEtlModule\WebTests\FeatureContext::iRenameTask()
    Then I should see tasks "Task1", "Task2", "Task3"                              # IU\RedCapEtlModule\WebTests\FeatureContext::iShouldSeeTasks()
    And I should not see "Error:"                                                  # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()
    When I delete task "Task3"                                                     # IU\RedCapEtlModule\WebTests\FeatureContext::iDeleteTask()
    Then I should see tasks "Task1", "Task2"                                       # IU\RedCapEtlModule\WebTests\FeatureContext::iShouldSeeTasks()
    And I should not see "Error:"                                                  # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'workflow'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Run workflow on embedded server                        # features/workflow.feature:108
    When I follow "Run"                                            # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I select "workflow" from "configType"                      # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I select "behat-workflow-test" from "workflowName"         # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I select "(embedded server)" from "server"                 # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I press "Run"                                              # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    Then I should see "[Task1] Processing complete."               # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "[Task2] Processing complete."                # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And database table "redcap_project_info" should contain 2 rows # IU\RedCapEtlModule\WebTests\FeatureContext::databaseTableShouldContainRows()
    And database table "enrollment" should contain 200 rows        # IU\RedCapEtlModule\WebTests\FeatureContext::databaseTableShouldContainRows()
    But I should not see "Error:"                                  # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'workflow'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Workflow global properties configuration                                                # features/workflow.feature:120
    When I follow "ETL Workflows"                                                                   # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow workflow "behat-workflow-test"                                                     # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowWorkflow()
    And I check "E-mail errors"                                                                     # IU\RedCapEtlModule\WebTests\FeatureContext::checkOption()
    And I check "E-mail summary"                                                                    # IU\RedCapEtlModule\WebTests\FeatureContext::checkOption()
    And I fill in "E-mail subject" with "REDCap-ETL Module workflow configuration test"             # IU\RedCapEtlModule\WebTests\FeatureContext::fillField()
    And I fill in "E-mail to list" with the user e-mail                                             # IU\RedCapEtlModule\WebTests\FeatureContext::iFileInWithTheUserEmail()
    And I press "Save"                                                                              # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    Then the "E-mail errors" checkbox should be checked                                             # IU\RedCapEtlModule\WebTests\FeatureContext::assertCheckboxChecked()
    And the "E-mail summary" checkbox should be checked                                             # IU\RedCapEtlModule\WebTests\FeatureContext::assertCheckboxChecked()
    And Field "E-mail subject" should contain value "REDCap-ETL Module workflow configuration test" # IU\RedCapEtlModule\WebTests\FeatureContext::fieldShouldContainValue()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'workflow'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Schedule configuration on embedded server      # features/workflow.feature:132
    When I follow "Schedule"                               # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I select "workflow" from "configType"              # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I select "behat-workflow-test" from "workflowName" # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I select "(embedded server)" from "server"         # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I schedule for next hour                           # IU\RedCapEtlModule\WebTests\FeatureContext::iScheduleForNextHour()
    And I press "Save"                                     # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    Then I should see "behat-workflow-test"                # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "ETL Server"                          # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "(embedded server)"                   # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should not see "Error:"                          # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'workflow'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Create remote server for testing workflows         # features/workflow.feature:144
    When I log out                                             # IU\RedCapEtlModule\WebTests\FeatureContext::iLogOut()
    And I access the admin interface                           # IU\RedCapEtlModule\WebTests\FeatureContext::iAccessTheAdminInterface()
    And I follow "Servers"                                     # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I delete server "remote-server-workflow-test"          # IU\RedCapEtlModule\WebTests\FeatureContext::iDeleteServer()
    And I fill in "Server:" with "remote-server-workflow-test" # IU\RedCapEtlModule\WebTests\FeatureContext::fillField()
    And I press "Add Server"                                   # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I follow server "remote-server-workflow-test"          # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowServer()
    And I check "isActive"                                     # IU\RedCapEtlModule\WebTests\FeatureContext::checkOption()
    And I configure server "password_authentication"           # IU\RedCapEtlModule\WebTests\FeatureContext::iConfigureServer()
    Then I should see "remote-server-workflow-test"            # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should not see "Error:"                              # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'workflow'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Run workflow on remote server                                                               # features/workflow.feature:157
    When I follow "ETL Workflows"                                                                       # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow workflow "behat-workflow-test"                                                         # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowWorkflow()
    And I fill in "E-mail subject" with "REDCap-ETL Module web test 2/3: run workflow on remote server" # IU\RedCapEtlModule\WebTests\FeatureContext::fillField()
    And I press "Save"                                                                                  # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I follow "Run"                                                                                  # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I select "workflow" from "configType"                                                           # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I select "behat-workflow-test" from "workflowName"                                              # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I select "remote-server-workflow-test" from "server"                                            # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I press "Run"                                                                                   # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I wait for 4 seconds                                                                            # IU\RedCapEtlModule\WebTests\FeatureContext::iWaitForSeconds()
    Then I should see "Your job has been submitted to server"                                           # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "remote-server-workflow-test"                                                      # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should not see "Error:"                                                                       # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'workflow'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Schedule configuration on remote server                                                          # features/workflow.feature:174
    When I follow "ETL Workflows"                                                                            # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I follow workflow "behat-workflow-test"                                                              # IU\RedCapEtlModule\WebTests\FeatureContext::iFollowWorkflow()
    And I fill in "E-mail subject" with "REDCap-ETL Module web test 3/3: schedule workflow on remote server" # IU\RedCapEtlModule\WebTests\FeatureContext::fillField()
    And I press "Save"                                                                                       # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    And I follow "Schedule"                                                                                  # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    And I select "workflow" from "configType"                                                                # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I select "behat-workflow-test" from "workflowName"                                                   # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I select "remote-server-workflow-test" from "server"                                                 # IU\RedCapEtlModule\WebTests\FeatureContext::selectOption()
    And I schedule for next hour                                                                             # IU\RedCapEtlModule\WebTests\FeatureContext::iScheduleForNextHour()
    And I press "Save"                                                                                       # IU\RedCapEtlModule\WebTests\FeatureContext::pressButton()
    Then I should see "behat-workflow-test"                                                                  # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "ETL Server"                                                                            # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "remote-server-workflow-test"                                                           # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should not see "Error:"                                                                            # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'workflow'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Check that workflow runs were logged in the admin interface # features/workflow.feature:191
    When I log out                                                      # IU\RedCapEtlModule\WebTests\FeatureContext::iLogOut()
    And I access the admin interface                                    # IU\RedCapEtlModule\WebTests\FeatureContext::iAccessTheAdminInterface()
    And I follow "Log"                                                  # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    Then I should see "behat-workflow-test"                             # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should not see "Error:"                                       # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'workflow'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Check that the workflow is on the admin workflows page                   # features/workflow.feature:198
    When I log out                                                                   # IU\RedCapEtlModule\WebTests\FeatureContext::iLogOut()
    And I access the admin interface                                                 # IU\RedCapEtlModule\WebTests\FeatureContext::iAccessTheAdminInterface()
    And I follow "Workflows"                                                         # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    Then I should see "behat-workflow-test"                                          # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And Workflow "behat-workflow-test" should have status "Ready" in admin workflows # IU\RedCapEtlModule\WebTests\FeatureContext::adminWorkflowShouldHaveStatus()
    And I should not see "Error:"                                                    # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

  ┌─ @BeforeScenario # IU\RedCapEtlModule\WebTests\FeatureContext::setUpBeforeScenario()
  │
  │  Feature file name :'workflow'
  │  Base URL set to: http://localhost/redcap/Cookie 'code-coverage-id' set to 'web-test'
  │  
  │
  Scenario: Check that the workflow configuration on the admin workflows page goes to the right page # features/workflow.feature:206
    When I log out                                                                                   # IU\RedCapEtlModule\WebTests\FeatureContext::iLogOut()
    And I access the admin interface                                                                 # IU\RedCapEtlModule\WebTests\FeatureContext::iAccessTheAdminInterface()
    And I follow "Workflows"                                                                         # IU\RedCapEtlModule\WebTests\FeatureContext::clickLink()
    When I configure workflow "behat-workflow-test" in admin workflows                               # IU\RedCapEtlModule\WebTests\FeatureContext::adminXonfigureWorkflow()
    Then I should see "behat-workflow-test"                                                          # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Configure"                                                                     # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Task1"                                                                         # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should see "Task2"                                                                         # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageContainsText()
    And I should not see "Error:"                                                                    # IU\RedCapEtlModule\WebTests\FeatureContext::assertPageNotContainsText()

20 scenarios (20 passed)
250 steps (250 passed)
2m20.45s (13.09Mb)
